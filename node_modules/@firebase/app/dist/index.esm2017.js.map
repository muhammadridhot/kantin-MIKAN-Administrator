{"version":3,"file":"index.esm2017.js","sources":["../src/errors.ts","../src/constants.ts","../src/firebaseApp.ts","../src/firebaseNamespaceCore.ts","../src/firebaseNamespace.ts","../index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  DUPLICATE_SERVICE = 'duplicate-service',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$name}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$name}\",\n  [AppError.DUPLICATE_APP]: \"Firebase App named '{$name}' already exists\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$name}' already deleted\",\n  [AppError.DUPLICATE_SERVICE]:\n    \"Firebase service named '{$name}' already registered\",\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$name}() takes either no argument or a ' +\n    'Firebase App instance.'\n};\n\nconst appErrors = new ErrorFactory<AppError>('app', 'Firebase', ERRORS);\n\nexport function error(code: AppError, args?: { [name: string]: any }) {\n  throw appErrors.create(code, args);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppConfig\n} from '@firebase/app-types';\nimport {\n  _FirebaseApp,\n  _FirebaseNamespace,\n  FirebaseService,\n  FirebaseAppInternals\n} from '@firebase/app-types/private';\nimport { deepCopy, deepExtend } from '@firebase/util';\nimport { error, AppError } from './errors';\nimport { DEFAULT_ENTRY_NAME } from './constants';\n\ninterface ServicesCache {\n  [name: string]: {\n    [serviceName: string]: FirebaseService;\n  };\n}\n\n// An array to capture listeners before the true auth functions\n// exist\nlet tokenListeners: any[] = [];\n\n/**\n * Global context object for a collection of services using\n * a shared authentication state.\n */\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly options_: FirebaseOptions;\n  private readonly name_: string;\n  private isDeleted_ = false;\n  private services_: ServicesCache = {};\n  private automaticDataCollectionEnabled_: boolean;\n\n  INTERNAL: FirebaseAppInternals;\n\n  constructor(\n    options: FirebaseOptions,\n    config: FirebaseAppConfig,\n    private readonly firebase_: _FirebaseNamespace\n  ) {\n    this.name_ = config.name!;\n    this.automaticDataCollectionEnabled_ =\n      config.automaticDataCollectionEnabled || false;\n    this.options_ = deepCopy<FirebaseOptions>(options);\n    this.INTERNAL = {\n      getUid: () => null,\n      getToken: () => Promise.resolve(null),\n      addAuthTokenListener: (callback: (token: string | null) => void) => {\n        tokenListeners.push(callback);\n        // Make sure callback is called, asynchronously, in the absence of the auth module\n        setTimeout(() => callback(null), 0);\n      },\n      removeAuthTokenListener: callback => {\n        tokenListeners = tokenListeners.filter(\n          listener => listener !== callback\n        );\n      }\n    };\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed_();\n    return this.automaticDataCollectionEnabled_;\n  }\n\n  set automaticDataCollectionEnabled(val) {\n    this.checkDestroyed_();\n    this.automaticDataCollectionEnabled_ = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed_();\n    return this.name_;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed_();\n    return this.options_;\n  }\n\n  delete(): Promise<void> {\n    return new Promise(resolve => {\n      this.checkDestroyed_();\n      resolve();\n    })\n      .then(() => {\n        this.firebase_.INTERNAL.removeApp(this.name_);\n        const services: FirebaseService[] = [];\n\n        for (const serviceKey of Object.keys(this.services_)) {\n          for (const instanceKey of Object.keys(this.services_[serviceKey])) {\n            services.push(this.services_[serviceKey][instanceKey]);\n          }\n        }\n\n        return Promise.all(\n          services.map(service => {\n            return service.INTERNAL.delete();\n          })\n        );\n      })\n      .then(\n        (): void => {\n          this.isDeleted_ = true;\n          this.services_ = {};\n        }\n      );\n  }\n\n  /**\n   * Return a service instance associated with this app (creating it\n   * on demand), identified by the passed instanceIdentifier.\n   *\n   * NOTE: Currently storage is the only one that is leveraging this\n   * functionality. They invoke it by calling:\n   *\n   * ```javascript\n   * firebase.app().storage('STORAGE BUCKET ID')\n   * ```\n   *\n   * The service name is passed to this already\n   * @internal\n   */\n  _getService(\n    name: string,\n    instanceIdentifier: string = DEFAULT_ENTRY_NAME\n  ): FirebaseService {\n    this.checkDestroyed_();\n\n    if (!this.services_[name]) {\n      this.services_[name] = {};\n    }\n\n    if (!this.services_[name][instanceIdentifier]) {\n      /**\n       * If a custom instance has been defined (i.e. not '[DEFAULT]')\n       * then we will pass that instance on, otherwise we pass `null`\n       */\n      const instanceSpecifier =\n        instanceIdentifier !== DEFAULT_ENTRY_NAME\n          ? instanceIdentifier\n          : undefined;\n      const service = this.firebase_.INTERNAL.factories[name](\n        this,\n        this.extendApp.bind(this),\n        instanceSpecifier\n      );\n      this.services_[name][instanceIdentifier] = service;\n    }\n\n    return this.services_[name][instanceIdentifier];\n  }\n\n  /**\n   * Callback function used to extend an App instance at the time\n   * of service instance creation.\n   */\n  private extendApp(props: { [name: string]: any }): void {\n    // Copy the object onto the FirebaseAppImpl prototype\n    deepExtend(this, props);\n\n    /**\n     * If the app has overwritten the addAuthTokenListener stub, forward\n     * the active token listeners on to the true fxn.\n     *\n     * TODO: This function is required due to our current module\n     * structure. Once we are able to rely strictly upon a single module\n     * implementation, this code should be refactored and Auth should\n     * provide these stubs and the upgrade logic\n     */\n    if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\n      tokenListeners.forEach(listener => {\n        this.INTERNAL.addAuthTokenListener(listener);\n      });\n      tokenListeners = [];\n    }\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed_(): void {\n    if (this.isDeleted_) {\n      error(AppError.APP_DELETED, { name: this.name_ });\n    }\n  }\n}\n\n// Prevent dead-code elimination of these methods w/o invalid property\n// copying.\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\n  FirebaseAppImpl.prototype.delete ||\n  console.log('dc');\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseNamespace,\n  FirebaseAppConfig\n} from '@firebase/app-types';\nimport {\n  _FirebaseApp,\n  _FirebaseNamespace,\n  FirebaseService,\n  FirebaseServiceFactory,\n  FirebaseServiceNamespace,\n  AppHook\n} from '@firebase/app-types/private';\nimport { deepExtend, patchProperty } from '@firebase/util';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { error, AppError } from './errors';\nimport { FirebaseAppLiteImpl } from './lite/firebaseAppLite';\nimport { DEFAULT_ENTRY_NAME } from './constants';\n\nfunction contains(obj: object, key: string) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\n/**\n * Because auth can't share code with other components, we attach the utility functions\n * in an internal namespace to share code.\n * This function return a firebase namespace object without\n * any utility functions, so it can be shared between the regular firebaseNamespace and\n * the lite version.\n */\nexport function createFirebaseNamespaceCore(\n  firebaseAppImpl: typeof FirebaseAppImpl | typeof FirebaseAppLiteImpl\n): FirebaseNamespace {\n  const apps: { [name: string]: FirebaseApp } = {};\n  const factories: { [service: string]: FirebaseServiceFactory } = {};\n  const appHooks: { [service: string]: AppHook } = {};\n\n  // A namespace is a plain JavaScript Object.\n  const namespace: FirebaseNamespace = {\n    // Hack to prevent Babel from modifying the object returned\n    // as the firebase namespace.\n    // @ts-ignore\n    __esModule: true,\n    initializeApp: initializeApp,\n    app: app as any,\n    apps: null as any,\n    Promise: Promise,\n    SDK_VERSION: '${JSCORE_VERSION}',\n    INTERNAL: {\n      registerService,\n      removeApp,\n      factories,\n      useAsService\n    }\n  };\n\n  // Inject a circular default export to allow Babel users who were previously\n  // using:\n  //\n  //   import firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase').default;\n  //\n  // instead of\n  //\n  //   import * as firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase');\n  patchProperty(namespace, 'default', namespace);\n\n  // firebase.apps is a read-only getter.\n  Object.defineProperty(namespace, 'apps', {\n    get: getApps\n  });\n\n  /**\n   * Called by App.delete() - but before any services associated with the App\n   * are deleted.\n   */\n  function removeApp(name: string): void {\n    const app = apps[name];\n    callAppHooks(app, 'delete');\n    delete apps[name];\n  }\n\n  /**\n   * Get the App object for a given name (or DEFAULT).\n   */\n  function app(name?: string): FirebaseApp {\n    name = name || DEFAULT_ENTRY_NAME;\n    if (!contains(apps, name)) {\n      error(AppError.NO_APP, { name: name });\n    }\n    return apps[name];\n  }\n\n  patchProperty(app, 'App', firebaseAppImpl);\n  /**\n   * Create a new App instance (name must be unique).\n   */\n  function initializeApp(\n    options: FirebaseOptions,\n    config?: FirebaseAppConfig\n  ): FirebaseApp;\n  function initializeApp(options: FirebaseOptions, name?: string): FirebaseApp;\n  function initializeApp(options: FirebaseOptions, rawConfig = {}) {\n    if (typeof rawConfig !== 'object' || rawConfig === null) {\n      const name = rawConfig;\n      rawConfig = { name };\n    }\n\n    const config = rawConfig as FirebaseAppConfig;\n\n    if (config.name === undefined) {\n      config.name = DEFAULT_ENTRY_NAME;\n    }\n\n    const { name } = config;\n\n    if (typeof name !== 'string' || !name) {\n      error(AppError.BAD_APP_NAME, { name: String(name) });\n    }\n\n    if (contains(apps, name)) {\n      error(AppError.DUPLICATE_APP, { name: name });\n    }\n\n    const app = new firebaseAppImpl(\n      options,\n      config,\n      namespace as _FirebaseNamespace\n    );\n\n    apps[name] = app;\n    callAppHooks(app, 'create');\n\n    return app;\n  }\n\n  /*\n   * Return an array of all the non-deleted FirebaseApps.\n   */\n  function getApps(): FirebaseApp[] {\n    // Make a copy so caller cannot mutate the apps list.\n    return Object.keys(apps).map(name => apps[name]);\n  }\n\n  /*\n   * Register a Firebase Service.\n   *\n   * firebase.INTERNAL.registerService()\n   *\n   * TODO: Implement serviceProperties.\n   */\n  function registerService(\n    name: string,\n    createService: FirebaseServiceFactory,\n    serviceProperties?: { [prop: string]: unknown },\n    appHook?: AppHook,\n    allowMultipleInstances = false\n  ): FirebaseServiceNamespace<FirebaseService> {\n    // Cannot re-register a service that already exists\n    if (factories[name]) {\n      error(AppError.DUPLICATE_SERVICE, { name: name });\n    }\n\n    // Capture the service factory for later service instantiation\n    factories[name] = createService;\n\n    // Capture the appHook, if passed\n    if (appHook) {\n      appHooks[name] = appHook;\n\n      // Run the **new** app hook on all existing apps\n      getApps().forEach(app => {\n        appHook('create', app);\n      });\n    }\n\n    // The Service namespace is an accessor function ...\n    function serviceNamespace(appArg: FirebaseApp = app()) {\n      if (typeof appArg[name] !== 'function') {\n        // Invalid argument.\n        // This happens in the following case: firebase.storage('gs:/')\n        error(AppError.INVALID_APP_ARGUMENT, { name: name });\n      }\n\n      // Forward service instance lookup to the FirebaseApp.\n      return appArg[name]();\n    }\n\n    // ... and a container for service-level properties.\n    if (serviceProperties !== undefined) {\n      deepExtend(serviceNamespace, serviceProperties);\n    }\n\n    // Monkey-patch the serviceNamespace onto the firebase namespace\n    namespace[name] = serviceNamespace;\n\n    // Patch the FirebaseAppImpl prototype\n    firebaseAppImpl.prototype[name] = function(...args) {\n      const serviceFxn = this._getService.bind(this, name);\n      return serviceFxn.apply(this, allowMultipleInstances ? args : []);\n    };\n\n    return serviceNamespace;\n  }\n\n  function callAppHooks(app: FirebaseApp, eventName: string) {\n    for (const serviceName of Object.keys(factories)) {\n      // Ignore virtual services\n      const factoryName = useAsService(app, serviceName);\n      if (factoryName === null) {\n        return;\n      }\n\n      if (appHooks[factoryName]) {\n        appHooks[factoryName](eventName, app);\n      }\n    }\n  }\n\n  // Map the requested service to a registered service name\n  // (used to map auth to serverAuth service when needed).\n  function useAsService(app: FirebaseApp, name: string): string | null {\n    if (name === 'serverAuth') {\n      return null;\n    }\n\n    const useService = name;\n    const options = app.options;\n\n    return useService;\n  }\n\n  return namespace;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from '@firebase/app-types';\nimport { _FirebaseApp, _FirebaseNamespace } from '@firebase/app-types/private';\nimport { createSubscribe, deepExtend, ErrorFactory } from '@firebase/util';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { createFirebaseNamespaceCore } from './firebaseNamespaceCore';\n\n/**\n * Return a firebase namespace object.\n *\n * In production, this will be called exactly once and the result\n * assigned to the 'firebase' global.  It may be called multiple times\n * in unit tests.\n */\nexport function createFirebaseNamespace(): FirebaseNamespace {\n  const namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\n  (namespace as _FirebaseNamespace).INTERNAL = {\n    ...(namespace as _FirebaseNamespace).INTERNAL,\n    createFirebaseNamespace: createFirebaseNamespace,\n    extendNamespace: extendNamespace,\n    createSubscribe: createSubscribe,\n    ErrorFactory: ErrorFactory,\n    deepExtend: deepExtend\n  };\n\n  /**\n   * Patch the top-level firebase namespace with additional properties.\n   *\n   * firebase.INTERNAL.extendNamespace()\n   */\n  function extendNamespace(props: { [prop: string]: unknown }): void {\n    deepExtend(namespace, props);\n  }\n\n  return namespace;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from '@firebase/app-types';\nimport { createFirebaseNamespace } from './src/firebaseNamespace';\n\n// Node detection logic from: https://github.com/iliakan/detect-node/\nlet isNode = false;\ntry {\n  isNode =\n    Object.prototype.toString.call(global.process) === '[object process]';\n} catch (e) {}\n\nisNode &&\n  console.warn(`\nWarning: This is a browser-targeted Firebase bundle but it appears it is being\nrun in a Node environment.  If running in a Node environment, make sure you\nare using the bundle specified by the \"main\" field in package.json.\n\nIf you are using Webpack, you can specify \"main\" as the first item in\n\"resolve.mainFields\":\nhttps://webpack.js.org/configuration/resolve/#resolvemainfields\n\nIf using Rollup, use the rollup-plugin-node-resolve plugin and set \"module\"\nto false and \"main\" to true:\nhttps://github.com/rollup/rollup-plugin-node-resolve\n`);\n\n// Firebase Lite detection\nif (self && 'firebase' in self) {\n  console.warn(`\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  `);\n\n  const sdkVersion = ((self as any).firebase as FirebaseNamespace).SDK_VERSION;\n  if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\n    console.warn(`\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    `);\n  }\n}\n\nexport const firebase = createFirebaseNamespace();\n\nexport default firebase;\n"],"names":[],"mappings":"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"}